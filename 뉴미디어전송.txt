<header> Element
- 문서의 header나 Section의 Header를 나타낼 때 사용
- 문서나 각 섹션, 아티클 등의 헤더 부분에 사용
 → 제목이나 간단한 소개 컨텐츠(로그인, 회원가임, 사이트맵, 언어선택 등)를 포함할 수 있음
- HeaderLine Element나 hgroup, nav 등을 하위 요소로 포함

<footer> Element
- 문서의 footer나 Section이나 Page의 Footer를 표현
- Section의 저자정보나, 관련링크, 저작권 표기 등  ☆
- 몇 번을 사용 가능하지만, 사용하는 위치에 따라서 각각의 의미가 달라짐  ☆
- page의 Body Tag 내의 Footer는 Page의 Footer
- 블로그 포스트 등의 article 내의 Footer는 블로그 포스트에 관한 Footer 정보
- <header>나 <footer>안에는 <footer>를 넣을 수 없다.  ☆

<nav> Element
- Navigation Section
- 문서 내에 navigation 요소(목적지로 이동할 수 있도록 링크를 별도로 모아둔 영역)가 있을 때 사용
- 페이지상의 Header나 좌측, 우측에 표현하는 Link 모음
- Footer에서도 사용가능

<nav> Element 주의 사항
- 스타일을 적용하기 위해서 nav Element를 사용하지 않음
- nav Element 내에 일반적을 <ul> Element를 사용하여 목록으로 사용

Section Element
- 문서의 영역을 구성하며 일반적인 Section(장, 절)의 의미를 가지며 내용적 흐름과 구조를 만들기 위해 사용
- 직접 스타일을 적용하기 위해 사용하지 않음
- 제목과 본문을 하나로 묶을 때, 같은 성격의 내용, 관련있는 내용을 묶을 때 사용
 → div Element와의 차이점
  - 스타일 적용에 사용
  - 제목과 본문에 각각 스타일을 적용하고 싶다거나 구분을 지으려 하는 경우

<article> Element
- 뉴스 기사, 게시판 글 등 독립된 하나의 컨텐츠에 사용
- Article은 여러 개의 Section을 포함할 수도 있다.
- Section이 관련있는 내용을 묶는 것이라면 article은 관련있는 내용 중 독립적으로 구성된 것들을 별도로 묶을 때 사용 ☆
- 영역 내에 header와 footer를 둘 수 있다.

<aside> Element
- 사이드 바, 광고와 같이 Main 컨텐츠 이외의 참고가 될 수 있는 독립적으로 사용되는 요소
- nav Element 들을 그룹화에도 사용

주의사항
- 컨텐츠에 직접적으로 관련이 없는 영역에만 사용 ☆
- aside의 영역이 삭제되면 Main 컨텐츠에 영향을  주는 경우 사용하면 안됨
- 컨텐츠의 내용과 제작자의 의도에 따라 다른 Element로 선택 가능

<hgroup> Element
- 헤드라인을 여러 개로 묶을 필요성이 있을 경우 사용
- 헤더 요소에 포함되어 여러 개의 헤드라인(h1 ~ h6)을 사용
- 제목과 소제목이나 부제 등을 그룹화하기 위해 사용 ☆
- h1 ~ h6 Element만 포함 가능
- 컨텐츠를 나누고 각 콘텐츠에 높은 레벨의 헤드라인을 부여하여 의미 전달
- Section이나 Article 같은 Outline 구성된 Element 어디에서나 사용
- 참고) <h> 태그를 이용하는 경우 제목에 따라 암묵적으로 섹션이 생성된다. 따라서 섹션과 제목 태그는 명시적으로 사용하는 습관을 기르자 ☆ 

Semantic web
 기존 html의 문제점
- 기계가 정보를 처리하고 이해하기에는 의미적으로 부족
- 표현적 요소를 강조함으로써 문서에 대한 의미적 전달 부족
- 지식 재 창출 및 의미적 통합, 의미 검색 등 한계점
 semantic tag : header, footer, nav, section, article, aside ...
 시멘틱 웹[semantic web]
- 컴퓨터가 정보자원의 뜻을 이해하고, 논리적 추론까지 할 수 있는 차세대 지능형 웹
- 웹 기반 기술에 의미를 부여해서 기계가 저옵를 해독하고 의미 해결을 가능하게 하는 차세대 지능형 웹  ☆


HTML5 기본 태그
<p>
- 단란 표시, 웹 브라우저는 자동적으로 단락의 전후에 빈 줄을 추가
- <br>과 차이점, <pre> 태그와의 차이점
- 대체할 수 있는 태그가 있다면 대체

<br>
- 줄바꾸기

<pre>
- 입력한 그대로 화면에 표시

<!-- -->
- 주석

<b>
- 볼드 텍스트

<i>
- 이탤릭체

<strong>
- 강하게, 브라우저마다 다르다    

<em>
- 텍스트 강조

<code>
- 텍스트가 코드임을 강조

<sup>
- 위 첨자

<sub>
- 아래 첨자

<mark>
- 하이라이트

강조해야하는 텍스트인 경우 <em>을 사용하고, 하이라이트인 경우 <mark>를 사용한다. 이외에는 가급적 css를 이용하는 것을 권장한다.
예를 들어 볼드 텍스트인 경우 font-weight 속성을 사용한다.

<hr>
- 수평선

특수기호
&nbsp; &lt; &gt; &quot; &amp;

참고)
euc-kr은 완성형 코드로 메모리를 적게 사용하는 한글과 영문만 사용하는 사이트에 사용이 좋다. 그러나 모든 나라의 글자를 
표현할 수 있고 다른 나라의 OS에서도 폰트 없이 한글을 볼 수 있으려면 가변길이 문자 인코딩 방식인 utf-8을 사용하는 것이 좋다.

<ul>
- 번호 없는 리스트

<li>
- 이탤릭체

<ol>
- 번호 있는 리스트

<dl>
- 정의 리스트

<dt>
- 항목

<dd>
- 항목의 정의

<a> 
- 하이퍼링크의 정의

<...href...target>
- 링크의 목적지, 열릴 새 페이지의 위치
- _blank (새로운 윈도우), _self(현재 윈도우)
- _parent(부모 프레임), _top(현재페이지에 적재 후 모든 프레임 취소)(html5에서는 frame을 지원하지 않아서 사용 하지 않음)

<...id...>
- <a>태그와 <id>속성을 함께 페이지 내에 북마크를 생성한다.

<a href="mailto....">
- 이메일링크

<a href="http:// .....">
- 다운로드 링크

<img>
- 웹페이지에서 이미지 불러오기

<..width...height...alt>
- 가로, 세로크기, 이미지를 화면에 표시하지 못할 경우 표시되는 텍스트

웹페이지에서 사용하는 이미지 파일
- jpg : 실사사진과 같이 복잡하고 많은 색상으로 이루어진 이미지, 투명  배경지원 안함, 파일크기 작고 애니메이션 지원 안함
- png : 클립아트와 같이 적은 수의 색상을 가진 이미지, 투명 배경 지원, 파일 크기 큼
- gif : 클립아트 형태의 이미지, 투명 배경 지원, 애니메이션 지원

<table>
- 표 형태의 데이터를 표시하는데 사용, 과거에는 전체 틀을 만드는데도 사용

<tr>
- 표의 줄

<td>
- 표의 셀

<th>
- 표의 제목으로 볼드체, 중앙정렬

<..border..>
- 표의 경계선

<..rowspan> 행들을 병합

<..colspan> 열들을 병합

<caption> 테이블의 제목

<table>의 속성에는 bgcolor, align, cellspacing 등과 같은 것들이 있다. 그러나 이는 모두 html5에서 사용이 금지되었고, css를 사용하도록 한다.

<audio>
- 음악을 재생하는 태그
(Autoplay - 음악 자동 재생, Controls - 제어기 표시, Loop - 반복재생, Preload - 오디오 미리 다운로드 -> 빠른 재생 가능, Src - 오디오 경로 지정, Volume - 재생 볼륨 설정(0~1))

<audio 지원 파일>
- mp3, wav, ogg 등

<source>
- 호환성을 위해 원본 파일의 형식을 지정한다.

<video>
- 음악을 재생하는 태그
(Autoplay - 비디오 자동 재생, Controls - 제어기 표시, Loop - 반복재생, Preload - 오디오 미리 다운로드 -> 빠른 재생 가능, Poster - 비디오를 다운로드 중일때 표시하는 이미지, Src - 오디오 경로 지정, Muted - 비디오의 오디오 출력을 중지, Width,Height -  비디오의 크기를 지정)

<video 지원 파일>
- mp4, webm(구글), ogg(테오라) 등

<source>
- 호환성을 위해 원본 파일의 형식을 지정한다.

<iframe>
- 웹페이지 안에서 다른 페이지를 표시하고자 할 때 사용
- Frameborder, scrolling, margin 등의 속성이 html4.0 버전까지 지원되었으나 html5에서는 더 이상 지원되지 않는다.
- 새로 추가된 속성에는 seamless(브라우저에 따라 지원여부 확인)가 있다.
- 광고를 위해 사용
- 익스플로러에서 사적으로 사용하던 기술

<div>
- 논리적인 섹션을 나누는 태그

<span>
- 인라인(태그 내의) 요소로서 텍스트를 위한 컨테이너                                                                                                                              

<form ...action ...method...>
- 화면에 나타나지는 않으나 입력요소를 화면에 담는 컨테이너의 역할을 한다.

<method=get 방식>
- url 주소 뒤에 파라미터를 붙여서 데이터를 전달하는 방식
- 예) 주소 ? 파라미터 (http://news.naver.com/main/list.nhn?mode=LSD&mid=sec&sid1=001)
- 최대 글자수 2048로 제한
- 보안에 취약
- 북마크 가능, 뒤로 가기 보장

method=post 방식
- 데이터를 http request 헤더에 포함시켜 전송하는 방식
- 캐시가 안되며 브라우저 히스토리에 남아있지 않다.
- 북마크와 뒤로가기가 불가능하다.

<input type="" value="" name="">
- 사용자로부터 정보를 받아들이는 데 사용
- type : 입력 요소의 유형
- value : 입력 요소의 초기값
- name : 입력 요소의 이름(서버와의 통신, id는 브라우저의 스크립트와 통신)

type속성
(text - 텍스트를 입력하는 한 줄짜리 필드, password - 비밀번호 입력하는 한 줄짜리 필드, radio - 라디오버튼, checkbox - 체크박스, file - 파일 이름을 입력하는 필드 생성, reset - 초기화 버튼, image - 이미지를 전송버튼으로 만든다,
hidden - 사용자에게 보이지는 않으나 서버로 전송, submit - 제출 버튼 생성)

input 요소의 추가 특성들
- 기존에 있었던 폼요소로 한 줄 텍스트 입력에 사용
- Required : 필수 입력 속성, Invalid : 입력값이 없을 경우 속성 등과 사용
- Autofocus : 페이지 로딩이 끝남과 동시에 자동으로 해당폼으로 커서
- Placeholder : 입력 필드에 간단한 설명을 표시
list : 제시문자열을 담은 datalist 요소의 ID(목록 ID - 문자열)
Min : 수치, 날짜 필드의 최소값(수치, 날짜)
Max : 수치, 날짜 필드의 최대값(수치, 날짜)
Step : 수치, 날짜 필드의 증감 단계 크기(수치)
Multiple : 다중 선택 가능 여부(부울)
Autocomplete : 저장된 자료를 자동으로 채워 넣을지 여부(열거형)
pattern : 정규식 표현(문자열)

<input type="button" value="">
- 폼요소 안에 버튼을 삽입

<button>
- 폼요소 안에 버튼을 삽입, 텍스트나 이미지와 같은 콘텐츠를 넣을 수 있다.
- 참고) form안에 <button>을 삽입할 경우 예상치 못한 이상한 값이 서버로 제출될 수 있다. 따라서 <form> 태그 안에서는 가급적 <input> 태그를 사용한다.

이미지 버튼의 사용
- 다음과 같은 두 가지 방법으로 이미지 버튼의 사용이 가능하다.
<button type="submit" onclick="alert('HI')"><img src="image/button_01.png></button>
<image type="image" img src="image/button_01.png onclick="alert('HI')" alt="제출버튼">

추가 입력 태그
Textarea(name, rows, cols) : 여러 줄의 텍스트 입력
Select - option(value, selected) : 메뉴를 표시하고 사용자로 하여금 선택
Fieldset(legend) : 입력요소를 그룹핑, 제목
Lable(for) : 레이블을 설정

파일 업로드
- 파일을 여러 개 선택할 수 있음 - multiple 속성을 이용
- 선택할 수 있는 파일의 종류를 지정할 수 있음 - accept 속성에 MIME 타입을 지정하여 필터링 할 수 있음
- 예) 특수한 마임타임 : Image/*(모든 이미지), video/*(모든 동영상), audio/*(모든 사운드) => 아직 적용된 브라우저는 없음
- 파일 이름 이외의 데이터 크기(크기, 갯수등)도 자바스크립트로 접근할 수 있음 
- 올바른 업로드를 위해서 enctype="multipart/form-data"를 추가

정규식(pattern)
- 특정한 규칙을 가지고 있는 문자열
. : 문자, 한 개의 어떤 문자와도 일치
\d : 숫자, 한 개의 숫자와 일치
\w : 문자와 숫자, 한개의 문자나 숫자와 일치
\s : 공백문자, 공백탭, 줄바꿈, 캐리지 리턴 문자와 일치
^ : 시작, 패턴의 시작을 표시
$ : 끝, 패턴의 끝을 표시
[] : (문자 종류, 문자범위), [a-z] - a부터 z까지의 문자 중 하나, [1-9] - 1부터 9까지의 숫자 중 하나
() : 문자 그룹핑, abc|adc와 a(b|d)c는 동일한 의미
* : 0회 이상 반복, a*b 는 b, ab, aab, aaab와 동일한 의미
+ : 1회 이상, a+b는 ab, aab, aaab를 나타내지만 b는 포함하지 않는다.
? : 0 또는 1회, a?b는 a, ab, b를 나타낸다.
{m} : m회, a{3}b는 aaab를 나타낸다.
 
<blockquote> // 브라우저 상에 변화 없음
- 다른 소스로부터 가져온 인용 섹션

<map>
-map 요소는 자손 요소인 area 요소와 함께 이미지 맵을 정의.

<object>
- 이미지, 플러그인 등 외부자원을 나타냄.
- 예) <object type="application/x-java-applet"><param name="code" value="MyJavaClass"></object>

<cite>
- cite 요소는 어떤 작품의 제목을 나타냄. 예를 들어 책, 수필, 시, 악보, 노래, 대본, 필름, TV 쇼, 게임, 조각상, 그림, 영화, 연극, 오페라, 뮤지컬 전시회 등이 될 수 있음

<q>
- 

<del>
- del 요소는 문서로부터 삭제되었음을 나타냄.

<ins>
- 문서에 추가된 것을 나타냄
 
<s>
- 더 이상 정확하지 않거나 적절하지 않은 사실을 알리기

<address>
- address 요소는 가장 가까운 조상 요소인 article 요소나 body 요소의 연락처 정보를 나타냄(body에 쓰면 body 전체의 저작권자, footer에 쓰면 body 전체의 저작권자, article에 쓰면 article 전체의 저작권자)

<small>
- small 요소는 작은 프린트와 같은 사이드 커멘트로 나타냄.
- 작은 프린트는 보통 부정, 경고, 법적 제약, 저작권과 같은 것을 포함
- 법적인 귀속, 혹은 라이센스 문제와 같은 용도로 사용

<wbr>
- wbr 요소는 br 요소가 강제로 줄바꿈을 처리하는 것과 달리 부모 요소의 너비에 따라 동적으로 줄바꿈을 처리하며 단어 줄바꿈을 표시
- 브라우저에 따라 지원이 안되는 경우도 있다.

<bdo>
- bdo 요소는 자식 요소의 텍스트를 왼쪽에서 오른쪽으로(ltr) 쓸지, 오른쪽에서 왼쪽으로(rtl) 쓸지 명시적으로 지정
- 여러줄 일 경우 확인

<ruby>
- ruby 요소는 루비 주석을 정의, 루비 주서은 텍스트 주변(보통 위에)에 나타나는 텍스트로 주로 동아시아권 언어에서 발음이나 주석으로 사용

disable 속성 (disableTest.html)
- 요소가 화면에 표시되기는 하지만 사용자가 입력하거나 수정불가
- 속성에 css를 적용하는 방법을 익히자

<optgroup>
- optgroup 요소는 레이블이 같은 option요소의 그룹

<keygen>
- 암호화를 위한 개인키와 공개키 쌍으로 생성
- form이 전송되면 비밀키의 공개키를 생성하여 생성하여 비밀키는 Client 측에 저장하고 공개키는 서버에 전송

<output>
- 계산의 결과를 나타냄(추후 자바스크립트와 함께 실습)

<progress>
- 작업의 진척도를 나타냄

<meter>
- meter 요소는 알려진 범위 내에서의 스칼라 측정 또는 분포 비율을 나타냄.(예를 들어 디스크 사용 현황, 쿼리 결과의 관련성, 특정 후보에 대한 투표율 등에 사용)

<datalist>
- 다른 컨트롤에서 사용할 수 있도록 미리 정의된 옵션 집합을 나타냄

<details>
- 사용자가 추가 정보를 얻거나 컨트롤할 수 있는 노출 위젯 생성
- <summary>와 함께 사용하며 Open 속성으로 조정

<code>
- 컴퓨터 코드의 일부분을 그대로 표시


<samp>
- 프로그램이나 계산 시스템의 결과물 출력

<var>
- 변수를 나타냄
- 프로그래밍 문맥이나 수식에서 사용하는 실제 변수일 수도 있고 일반적인 문장에서 마치 변수처럼 임의의 숫자 또는 문자열을 나타내기 위해 사용할 수 도 있음

<tabindex>
- 요소가 포커스를 가질 수 있는지 확인하고, 포커스 내비게이션을 위한 상대적 순서를 명시
- 탭키를 이용해 내비게이션 하는 것에서 유래

<div>
- 아무 의미도 없이 스타일을 주거나스크립트를 연결하기 위해 요소를 덩어리로 묶는 역할
- 요소가 속한 줄은 가로 화면 전체 100%를 차지
- cf) span = inline 영역

HTML5 전역 속성
- HTML 요소에서 공통으로 사용하는 속성
- accesskey 속성 
  - 사용자 에이전트에 의해 요소를 활성화시키거나 포커스를 갖게끔 하는 단축키를 생성하기 위한 가이드로 사용
  - 공백문자로 구분된 토큰이며, 유니코드값
      웹 브라우저                 윈도우                   메킨토시
  인터넷익스플로어                alt

- class 속성
  - css의 셀렉터, DOM의 getElementByClassName() 메서드 등을 위한 값을 제공

- dir 속성
  - 요소의 텍스트 방향성을 명시
  - bdo 요소에서는 반드시 사용 
  ltr 요소 내용의 텍스트가 왼쪽에서 오른쪽입니다
  rtl 요소 내용의 텍스트가 오른족에서 왼쪽입니다
  auto 요소의 내용에 따라서 방향성이 판별됩니다.

- draggable 속성
 - 요소를 드레그 시킴
  true 요소를 드래그할 수 있음
  false 요소를 드래그할 수 없음
  auto 사용자 에이전의 기본값을 따름

- hidden 속성
 - 요소를 감춤0.
0

- id 속성
 - 최소 한 개의 문자 포함

- lang 속성
 - 요소 내요으이 주 언어를 명시

- style 속성
 - style 속성은 요소에 css 스타일 명세를 정의

- title 속성
 - 요소의 조언 정보







