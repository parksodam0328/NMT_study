<header> Element
- 문서의 header나 Section의 Header를 나타낼 때 사용
- 문서나 각 섹션, 아티클 등의 헤더 부분에 사용
 → 제목이나 간단한 소개 컨텐츠(로그인, 회원가임, 사이트맵, 언어선택 등)를 포함할 수 있음
- HeaderLine Element나 hgroup, nav 등을 하위 요소로 포함

<footer> Element
- 문서의 footer나 Section이나 Page의 Footer를 표현
- Section의 저자정보나, 관련링크, 저작권 표기 등  ☆
- 몇 번을 사용 가능하지만, 사용하는 위치에 따라서 각각의 의미가 달라짐  ☆
- page의 Body Tag 내의 Footer는 Page의 Footer
- 블로그 포스트 등의 article 내의 Footer는 블로그 포스트에 관한 Footer 정보
- <header>나 <footer>안에는 <footer>를 넣을 수 없다.  ☆

<nav> Element
- Navigation Section
- 문서 내에 navigation 요소(목적지로 이동할 수 있도록 링크를 별도로 모아둔 영역)가 있을 때 사용
- 페이지상의 Header나 좌측, 우측에 표현하는 Link 모음
- Footer에서도 사용가능

<nav> Element 주의 사항
- 스타일을 적용하기 위해서 nav Element를 사용하지 않음
- nav Element 내에 일반적을 <ul> Element를 사용하여 목록으로 사용

Section Element
- 문서이 영역을 구성하며 일반적인 Section(장, 절)의 의미를 가지며 내용적 흐름과 구조를 만들기 위해 사용
- 직접 스타일을 적용하기 위해 사용하지 않음
- 제목과 본문을 하나로 묶을 때, 같은 성격의 내용, 관련있는 내용을 묶을 때 사용
 → div Element와의 차이점
  - 스타일 적용에 사용
  - 제목과 본문에 각각 스타일을 적용하고 싶다거나 구분을 지으려 하는 경우

<article> Element
- 뉴스 기사, 게시판 글 등 독립된 하나의 컨텐츠에 사용
- Article은 여러 개의 Section을 포함할 수도 있다.
- Section이 관련있는 내용을 묶는 것이라면 article은 관련있는 내용 중 독립적으로 구성된 것들을 별도로 묶을 때 사용 ☆
- 영역 내에 header와 footer를 둘 수 있다.

<aside> Element
- 사이드 바, 광고와 같이 Main 컨텐츠 이외의 참고가 될 수 있는 독립적으로 사용되는 요소
- nav Element 들을 그룹화에도 사용

주의사항
- 컨텐츠에 직접적으로 관련이 없는 영역에만 사용 ☆
- aside의 영역이 삭제되면 Main 컨텐츠에 영향을  주는 경우 사용하면 안됨
- 컨텐츠의 내용과 제작자의 의도에 따라 다른 Element로 선택 가능

<hgroup> Element
- 헤드라인을 여러 개로 묶을 필요성이 있을 경우 사용
- 헤더 요소에 포함되어 여러 개의 헤드라인(h1 ~ h6)을 사용
- 제목과 소제목이나 부제 등을 그룹화하기 위해 사용 ☆
- h1 ~ h6 Element만 포함 가능
- 컨텐츠를 나누고 각 콘텐츠에 높은 레벨의 헤드라인을 부여하여 의미 전달
- Section이나 Article 같은 Outline 구성된 Element 어디에서나 사용
- 참고) <h> 태그를 이용하는 경우 제목에 따라 암묵적으로 섹션이 생성된다. 따라서 섹션과 제목 태그는 명시적으로 사용하는 습관을 기르자 ☆ 

Semantic web
 기존 html의 문제점
- 기계가 정보를 처리하고 이해하기에는 의미적으로 부족
- 표현적 요소를 강조함으로써 문서에 대한 의미적 전달 부족
- 지식 재 창출 및 의미적 통합, 의미 검색 등 한계점
 semantic tag : header, footer, nav, section, article, aside ...
 시멘틱 웹[semantic web]
- 컴퓨터가 정보자원의 뜻을 이해하고, 논리적 추론까지 할 수 있는 차세대 지능형 웹
- 웹 기반 기술에 의미를 부여해서 기계가 저옵를 해독하고 의미 해결을 가능하게 하는 차세대 지능형 웹  ☆


HTML5 기본 태그
<p>
- 단란 표시, 웹 브라우저는 자동적으로 단락의 전후에 빈 줄을 추가
- <br>과 차이점, <pre> 태그와의 차이점
- 대체할 수 있는 태그가 있다면 대체

<br>
- 줄바꾸기

<pre>
- 입력한 그대로 화면에 표시

<!-- -->
- 주석

<b>
- 볼드 텍스트

<i>
- 이탤릭체

<strong>
- 강하게, 브라우저마다 다르다    

<em>
- 텍스트 강조

<code>
- 텍스트가 코드임을 강조

<sup>
- 위 첨자

<sub>
- 아래 첨자

<mark>
- 하이라이트

강조해야하는 텍스트인 경우 <em>을 사용하고, 하이라이트인 경우 <mark>를 사용한다. 이외에는 가급적 css를 이용하는 것을 권장한다.
예를 들어 볼드 텍스트인 경우 font-weight 속성을 사용한다.

<hr>
- 수평선

특수기호
&nbsp; &lt; &gt; &quot; &amp;

참고)
euc-kr은 완성형 코드로 메모리를 적게 사용하는 한글과 영문만 사용하는 사이트에 사용이 좋다. 그러나 모든 나라의 글자를 
표현할 수 있고 다른 나라의 OS에서도 폰트 없이 한글을 볼 수 있으려면 가변길이 문자 인코딩 방식인 utf-8을 사용하는 것이 좋다.

<ul>
- 번호 없는 리스트

<li>
- 이탤릭체

<ol>
- 번호 있는 리스트

<dl>
- 정의 리스트

<dt>
- 항목

<dd>
- 항목의 정의

<a> 
- 하이퍼링크의 정의

<...href...target>
- 링크의 목적지, 열릴 새 페이지의 위치
- _blank (새로운 윈도우), _self(현재 윈도우)
- _parent(부모 프레임), _top(현재페이지에 적재 후 모든 프레임 취소)(html5에서는 frame을 지원하지 않아서 사용 하지 않음)

<...id...>
- <a>태그와 <id>속성을 함께 페이지 내에 북마크를 생성한다.

<a href="mailto....">
- 이메일링크

<a href="http:// .....">
- 다운로드 링크

<img>
- 웹페이지에서 이미지 불러오기

<..width...height...alt>
- 가로, 세로크기, 이미지를 화면에 표시하지 못할 경우 표시되는 텍스트

웹페이지에서 사용하는 이미지 파일
- jpg : 실사사진과 같이 복잡하고 많은 색상으로 이루어진 이미지, 투명  배경지원 안함, 파일크기 작고 애니메이션 지원 안함
- png : 클립아트와 같이 적은 수의 색상을 가진 이미지, 투명 배경 지원, 파일 크기 큼
- gif : 클립아트 형태의 이미지, 투명 배경 지원, 애니메이션 지원

<table>
- 표 형태의 데이터를 표시하는데 사용, 과거에는 전체 틀을 만드는데도 사용

<tr>
- 표의 줄

<td>
- 표의 셀

<th>
- 표의 제목으로 볼드체, 중앙정렬

<..border..>
- 표의 경계선

<..rowspan> 행들을 병합

<..colspan> 열들을 병합

<caption> 테이블의 제목

<table>의 속성에는 bgcolor, align, cellspacing 등과 같은 것들이 있다. 그러나 이는 모두 html5에서 사용이 금지되었고, css를 사용하도록 한다.